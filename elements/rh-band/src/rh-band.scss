@import "../../rh-sass/rh-sass";

:host {
  // Spacing values
  --rh-band--paddingTop:                       calc(#{rh-var(container-spacer)} * 4);
  --rh-band--paddingRight:                     #{rh-var(container-spacer)};
  --rh-band--paddingBottom:                    calc(#{rh-var(container-spacer)} * 4);
  --rh-band--paddingLeft:                      #{rh-var(container-spacer)};
  // Surface colors
  --rh-band--backgroundColor:                 #{rh-color(surface--base)};
  --rh-band--backgroundPositionX:             center;
  --rh-band--backgroundPositionY:             center;
  // Border settings
  --rh-band--borderColor:                      transparent;
  --rh-band--borderTopWidth:                   #{rh-var(surface--border-width)};
  --rh-band--borderBottomWidth:                #{rh-var(surface--border-width)};
  --rh-band--borderStyle:                      #{rh-var(surface--border-style)};
  // Header-specific settings
  --rh-band_header--title--size:               #{rh-var(font-size--heading--gamma)};
  --rh-band_header--heading--size:             #{rh-var(font-size--heading--alpha)};
  --rh-band_header--summary--size:             #{rh-var(font-size--heading--delta)};
  --rh-band_header--title--weight:             800;
  --rh-band_header--heading--weight:           600;
  --rh-band_header--summary--weight:           400;
  // Layouts, grid layouts
  --rh-band_header--layout:                    1fr;
  --rh-band_body--layout:                      1fr;
  --rh-band_footer--layout:                    1fr;
  // Text colors
  --rh-broadcasted--color--text:               #{rh-color(surface--base--text)};
  --rh-broadcasted--color--ui-link:            #{rh-color(surface--base--link)};
  --rh-broadcasted--color--ui-link--visited:   #{rh-color(surface--base--link--visited)};
  --rh-broadcasted--color--ui-link--hover:     #{rh-color(surface--base--link--hover)};
  --rh-broadcasted--color--ui-link--focus:     #{rh-color(surface--base--link--focus)};
  // Band width logic
  // Initialize at mobile breakpoint
  --rh-band--width:                            auto;
  // Loop through the other breakpoints
  @each $size in (sm, md, lg, xl) {
    @media screen and (min-width: rh-breakpoint(#{$size})) {
      --rh-band--width: calc(#{rh-breakpoint(#{$size})} - calc(var(--rh-band--paddingRight) * 2));
    }
  }
  // Reduce padding for print
  @media print {
    --rh-band--paddingTop:    calc(#{rh-var(container-spacer)} * 2);
    --rh-band--paddingBottom: calc(#{rh-var(container-spacer)} * 2);
  }
}

:host([color="dark"]) {
  --rh-band--backgroundColor:                  #{rh-color(surface--darker)};
  --rh-broadcasted--color--text:               #{rh-color(surface--darker--text)};
  --rh-broadcasted--color--ui-link:            #{rh-color(surface--darker--link)};
  --rh-broadcasted--color--ui-link--visited:   #{rh-color(surface--darker--link--visited)};
  --rh-broadcasted--color--ui-link--hover:     #{rh-color(surface--darker--link--hover)};
  --rh-broadcasted--color--ui-link--focus:     #{rh-color(surface--darker--link--focus)};
}

:host([color="darkest"]) {
  --rh-band--backgroundColor:                       #{rh-color(surface--darkest)};
  --rh-broadcasted--color--text:               #{rh-color(surface--darkest--text)};
  --rh-broadcasted--color--ui-link:            #{rh-color(surface--darkest--link)};
  --rh-broadcasted--color--ui-link--visited:   #{rh-color(surface--darkest--link--visited)};
  --rh-broadcasted--color--ui-link--hover:     #{rh-color(surface--darkest--link--hover)};
  --rh-broadcasted--color--ui-link--focus:     #{rh-color(surface--darkest--link--focus)};
}

:host([color="light"]) {
  --rh-band--backgroundColor:                       #{rh-color(surface--lighter)};
  --rh-broadcasted--color--text:               #{rh-color(surface--lighter--text)};
  --rh-broadcasted--color--ui-link:            #{rh-color(surface--lighter--link)};
  --rh-broadcasted--color--ui-link--visited:   #{rh-color(surface--lighter--link--visited)};
  --rh-broadcasted--color--ui-link--hover:     #{rh-color(surface--lighter--link--hover)};
  --rh-broadcasted--color--ui-link--focus:     #{rh-color(surface--lighter--link--focus)};
}

:host([color="lightest"]) {
  --rh-band--backgroundColor:                       #{rh-color(surface--lightest)};
  --rh-broadcasted--color--text:               #{rh-color(surface--lightest--text)};
  --rh-broadcasted--color--ui-link:            #{rh-color(surface--lightest--link)};
  --rh-broadcasted--color--ui-link--visited:   #{rh-color(surface--lightest--link--visited)};
  --rh-broadcasted--color--ui-link--hover:     #{rh-color(surface--lightest--link--hover)};
  --rh-broadcasted--color--ui-link--focus:     #{rh-color(surface--lightest--link--focus)};
}

:host([color="complement"]) {
  --rh-band--backgroundColor:                       #{rh-color(surface--complement)};
  --rh-broadcasted--color--text:               #{rh-color(surface--complement--text)};
  --rh-broadcasted--color--ui-link:            #{rh-color(surface--complement--link)};
  --rh-broadcasted--color--ui-link--visited:   #{rh-color(surface--complement--link--visited)};
  --rh-broadcasted--color--ui-link--hover:     #{rh-color(surface--complement--link--hover)};
  --rh-broadcasted--color--ui-link--focus:     #{rh-color(surface--complement--link--focus)};
}

:host([color="accent"]) {
  --rh-band--backgroundColor:                       #{rh-color(surface--accent)};
  --rh-broadcasted--color--text:               #{rh-color(surface--accent--text)};
  --rh-broadcasted--color--ui-link:            #{rh-color(surface--accent--link)};
  --rh-broadcasted--color--ui-link--visited:   #{rh-color(surface--accent--link--visited)};
  --rh-broadcasted--color--ui-link--hover:     #{rh-color(surface--accent--link--hover)};
  --rh-broadcasted--color--ui-link--focus:     #{rh-color(surface--accent--link--focus)};
}

:host([size="small"]) {
  --rh-band--paddingTop:        #{rh-var(container-spacer)};
  --rh-band--paddingBottom:     #{rh-var(container-spacer)};
}

a {
  color: var(--rh-broadcasted--color--ui-link);
  text-transform: var(--rh-broadcasted--ui-link--textTransform);
  &:visited {
    color: var(--rh-broadcasted--color--ui-link--visited);
  }
  &:hover {
    color: var(--rh-broadcasted--color--ui-link--hover);
  }
  &:focus {
    color: var(--rh-broadcasted--color--ui-link--focus);
  }
}

.rh-band {
  &__wrapper {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-items: flex-start;

    // Padding styles
    padding-top: var(--rh-band--paddingTop);
    padding-bottom: var(--rh-band--paddingBottom);

    // Border styles
    border-top-width: var(--rh-band--borderTopWidth);
    border-bottom-width: var(--rh-band--borderBottomWidth);
    border-style: var(--rh-band--borderStyle);
    border-color: var(--rh-band--borderColor);

    // Base colors
    background-color: var(--rh-band--backgroundColor);
    background-position-x: var(--rh-band--backgroundPositionX);
    background-position-y: var(--rh-band--backgroundPositionY);
    color: var(--rh-broadcasted--color--text);

    // Remove background color for print
    @include rh-no-print-background;
  }
  &__container {
    padding-top: 0;
    padding-right: var(--rh-band--paddingRight);
    padding-bottom: 0;
    padding-left: var(--rh-band--paddingLeft);
    width: var(--rh-band--width);
    margin: 0 auto;
    // Aside layouts
    // &[position~="right"] {
      display: flex;
      flex-direction: column;
      @media (min-width: 768px) {
        flex-direction: row;
      }
      > * {
        flex-grow: 1;
        @media (min-width: 588px) {
          float: left;
          width: 100%;
        }
        @media (max-width: 767px) {
          margin-bottom: 30px;
          clear: both;
        }
        &:first-child {
          @media (min-width: 768px) {
            width: calc(100% - 280px);
            margin-right: 2.5702331142%;
          }
          @media (min-width: 992px) {
            width: calc(100% - 330px);
          }
          @media (min-width: 1200px) {
            width: calc(100% - 330px);
          }
        }
        &:last-child {
          margin-bottom: 0;
        }
        &:not(:first-child) {
          @media (min-width: 768px) {
            width: 250px;
          }
          @media (min-width: 992px) {
            width: 300px;
          }
          @media (min-width: 1200px) {
            width: 300px;
          }
        }
      // }
    }

    // &[position~="left"] {
        // @include aside($side: left, $query: "bp");
    // }

    // &[position~="swap"] {
        // @include aside($side: right, $query: "bp", $swap: true);
    // }

    // &[position="left swap"] {
    //     @include aside($side: left, $query: "bp", $swap: true);
    // }

    //////////////////////////////////////////////////////
    // Specifically for SOLP usage, do not reuse elsewhere

    // WIDE ASIDE: FOR FORMS IN THE SIDEBAR
    // @include data-layout("~", aside-right-swap-wide) {
    //     @include aside($side: right, $query: "bp", $swap: true, $sidebar-md: $aside-wide, $sidebar-lg: $aside-wide);
    // }

    // @include data-layout("~", aside-right-wide) {
    //     @include aside($side: right, $query: "bp", $sidebar-md: $aside-wide, $sidebar-lg: $aside-wide);
    // }

    // @include data-layout("~", aside-left-swap-wide) {
    //     @include aside($side: left, $query: "bp", $swap: true, $sidebar-md: $aside-wide, $sidebar-lg: $aside-wide);
    // }

    // @include data-layout("~", aside-left-wide) {
    //     @include aside($side: left, $query: "bp", $sidebar-md: $aside-wide, $sidebar-lg: $aside-wide);
    // }
  }
  &__header,
  &__body,
  &__footer,
  &__aside {
    display: block;
    margin: 0;
    // Child pseudo-selectors based on slotted code before upgrade
    &::slotted(*:nth-child(2)) {
      margin-top: 0 !important;
    }
    @for $n from 1 to 6 {
      &::slotted(h#{$n}:first-child) {
        margin-top: 0 !important;
        font-size: var(--rh-band_header--size);
      }
    }
  }
  &__header {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 0;
    // @media screen and (min-width: 768px) {
    //   grid-template-columns: var(--rh-band_body--layout);
    //   grid-gap: rh-var(container-spacer);
    // }
    &--title {
      @for $n from 1 to 6 {
        &::slotted(h#{$n}) {
          font-size: var(--rh-band_header--title--size);
          font-weight: var(--rh-band_header--title--weight);
          text-transform: uppercase;
          margin-top: 0;
        }
      }
    }
    &--heading {
      @for $n from 1 to 6 {
        &::slotted(h#{$n}) {
          font-size: var(--rh-band_header--heading--size);
          font-weight: var(--rh-band_header--heading--weight);
          margin-top: 0;
        }
      }
    }
    &--summary {
      &::slotted(p) {
        font-size: var(--rh-band_header--summary--size);
        font-weight: var(--rh-band_header--summary--weight);
        margin-top: 0;
      }
    }
  }
  &__body {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: rh-var(container-spacer);
    @media screen and (min-width: 768px) {
      grid-template-columns: var(--rh-band_body--layout);
    }
  }
  &__footer {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: rh-var(container-spacer);
    @media screen and (min-width: 768px) {
      grid-template-columns: var(--rh-band_body--layout);
    }
  }
  &__aside {
    max-width: 250px;
  }
}
