{"version":3,"file":"rh-some-combo.umd.js","sources":["rh-some-combo.umd.js"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport RHElement from \"../rhelement/rhelement.umd\";\n\nclass RhSomeCombo extends RHElement {\n  get html() {\n    return `\n<style>\n:host {\n  display: block; }\n\n:host([hidden]) {\n  display: none; }\n</style>\n${this.isTab ? `\n  <rh-tabs>\n    ${this.groupings.map(group => `\n      <rh-tab role=\"heading\" slot=\"tab\">\n        ${group.heading.outerHTML}\n      </rh-tab>\n      <rh-tab-panel role=\"region\" slot=\"panel\">\n        ${group.body.outerHTML}\n      </rh-tab-panel>\n    `).join('')}\n  </rh-tabs>\n` : `\n  <rh-accordion>\n    ${this.groupings.map(group => `\n      <rh-accordion-header>\n        ${group.heading.outerHTML}\n      </rh-accordion-header>\n      <rh-accordion-panel>\n        ${group.body.outerHTML}\n      </rh-accordion-panel>\n    `).join('')}\n  </rh-accordion>\n`}`;\n  }\n\n  static get tag() {\n    return \"rh-some-combo\";\n  }\n\n  get templateUrl() {\n    return \"rh-some-combo.html\";\n  }\n\n  get styleUrl() {\n    return \"rh-some-combo.scss\";\n  }\n\n  get isTab() {\n    return this.parentNode.offsetWidth > 768;\n  }\n\n  constructor() {\n    super(RhSomeCombo, {\n      delayRender: true\n    });\n\n    this.groupings = [];\n\n    this._observer = new MutationObserver(() => {\n      this.groupings = [];\n\n      const tempGrouping = [...this.querySelectorAll(\"rh-some-combo-grouping\")];\n      tempGrouping.forEach(group => {\n        const tempGroup = {\n          heading: group.querySelector('[heading=\"heading\"]'),\n          body: group.querySelector('[foo=\"body\"]')\n        };\n\n        this.groupings.push(tempGroup);\n      });\n\n      this.render();\n    });\n\n    this._observer.observe(this, {\n      attributes: true,\n      childList: true\n    });\n  }\n}\n\nRHElement.create(RhSomeCombo);\n"],"names":["RhSomeCombo","groupings","_observer","MutationObserver","_this","querySelectorAll","forEach","tempGroup","group","querySelector","push","render","observe","RHElement","this","isTab","map","heading","outerHTML","body","join","parentNode","offsetWidth","create"],"mappings":"ghBAwBMA,gWAoDIA,EAAa,cACJ,cAGVC,UAAY,KAEZC,UAAY,IAAIC,iBAAiB,aAC/BF,UAAY,oIAEQG,EAAKC,iBAAiB,4BAClCC,QAAQ,gBACbC,EAAY,SACPC,EAAMC,cAAc,4BACvBD,EAAMC,cAAc,mBAGvBR,UAAUS,KAAKH,OAGjBI,aAGFT,UAAUU,UAAc,aACf,aACD,yUA5ESC,yIAUxBC,KAAKC,4BAEDD,KAAKb,UAAUe,IAAI,yEAEfR,EAAMS,QAAQC,yFAGdV,EAAMW,KAAKD,4CAEdE,KAAK,kDAINN,KAAKb,UAAUe,IAAI,4DAEfR,EAAMS,QAAQC,iFAGdV,EAAMW,KAAKD,kDAEdE,KAAK,uEAUD,4DAIA,0DAI8B,IAA9BN,KAAKO,WAAWC,gDAZhB,yBA6CXT,EAAUU,OAAOvB"}