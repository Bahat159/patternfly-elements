{"version":3,"file":"pfe-number.umd.js","sources":["pfe-number.umd.js"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport PFElement from \"../pfelement/pfelement.umd\";\nimport numeral from \"numeral\";\n\n// easy aliases for common format strings\nconst types = {\n  abbrev: \"0a\", // or 'approx'?\n  ordinal: \"0o\",\n  percent: \"0%\",\n  bytes: \"0[.][00] ib\",\n  e: \"0[.00]e+0\",\n  thousands: \"0,0[.][00]\"\n};\n\n// use thin spaces to separate thousands chunks\n// debugger;\nnumeral.locales.en.delimiters.thousands = \"â€¯\";\n\nclass PfeNumber extends PFElement {\n  get html() {\n    return `\n<style>\n:host {\n  display: inline;\n  white-space: nowrap; }\n</style>\n<span></span>`;\n  }\n\n  static get tag() {\n    return \"pfe-number\";\n  }\n\n  get styleUrl() {\n    return \"pfe-number.scss\";\n  }\n\n  get templateUrl() {\n    return \"pfe-number.html\";\n  }\n\n  static get observedAttributes() {\n    return [\"number\", \"format\", \"type\"];\n  }\n\n  constructor() {\n    super(PfeNumber);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.connected = true;\n\n    this._determineFormat();\n    this._setInitialNumber();\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    super.attributeChangedCallback(...arguments);\n    switch (attr) {\n      case \"type\":\n        this._determineFormat();\n        break;\n      case \"format\":\n        this._updateNumber(this.getAttribute(\"number\"), newVal);\n        break;\n      case \"number\":\n        this._updateNumber(newVal, this.getAttribute(\"format\"));\n    }\n  }\n\n  _setInitialNumber() {\n    const numberAttrDefined = !Number.isNaN(\n      parseFloat(this.getAttribute(\"number\"))\n    );\n    const numberContentDefined = !Number.isNaN(parseFloat(this.textContent));\n\n    if (numberAttrDefined) {\n      this.setAttribute(\"number\", this.getAttribute(\"number\"));\n    } else if (numberContentDefined) {\n      this.setAttribute(\"number\", this.textContent);\n    }\n  }\n\n  _determineFormat() {\n    let type = this.getAttribute(\"type\");\n\n    if (type && types[type]) {\n      this.setAttribute(\"format\", types[type]);\n    } else {\n      this.setAttribute(\"format\", this.getAttribute(\"format\") || \"0\");\n    }\n  }\n\n  _updateNumber(num, type) {\n    this.shadowRoot.querySelector(\"span\").textContent = this._format(num, type);\n  }\n\n  _format(num, type) {\n    return numeral(num).format(type);\n  }\n}\n\nPFElement.create(PfeNumber);\n"],"names":["types","numeral","locales","en","delimiters","thousands","PfeNumber","PFElement","connected","_determineFormat","_setInitialNumber","attr","oldVal","newVal","arguments","_updateNumber","this","getAttribute","numberAttrDefined","Number","isNaN","parseFloat","numberContentDefined","textContent","setAttribute","type","num","shadowRoot","querySelector","_format","format","create"],"mappings":"k2BA0BMA,EAAQ,QACJ,aACC,aACA,WACF,gBACJ,sBACQ,cAKbC,EAAQC,QAAQC,GAAGC,WAAWC,UAAY,QAEpCC,gWA4BIA,uUA5BcC,4KAgBb,4DAIA,sDARA,8DAYA,CAAC,SAAU,SAAU,iKASvBC,WAAY,OAEZC,wBACAC,qEAGkBC,EAAMC,EAAQC,kHACHC,WAC1BH,OACD,YACEF,6BAEF,cACEM,cAAcC,KAAKC,aAAa,UAAWJ,aAE7C,cACEE,cAAcF,EAAQG,KAAKC,aAAa,4DAK3CC,GAAqBC,OAAOC,MAChCC,WAAWL,KAAKC,aAAa,YAEzBK,GAAwBH,OAAOC,MAAMC,WAAWL,KAAKO,cAEvDL,OACGM,aAAa,SAAUR,KAAKC,aAAa,WACrCK,QACJE,aAAa,SAAUR,KAAKO,4DAK/BE,EAAOT,KAAKC,aAAa,QAEzBQ,GAAQzB,EAAMyB,QACXD,aAAa,SAAUxB,EAAMyB,SAE7BD,aAAa,SAAUR,KAAKC,aAAa,WAAa,2CAIjDS,EAAKD,QACZE,WAAWC,cAAc,QAAQL,YAAcP,KAAKa,QAAQH,EAAKD,mCAGhEC,EAAKD,UACJxB,EAAQyB,GAAKI,OAAOL,YAI/BlB,EAAUwB,OAAOzB"}