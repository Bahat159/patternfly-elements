{"version":3,"file":"rh-pagination.umd.js","sources":["rh-pagination.umd.js"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport RHElement from \"../rhelement/rhelement.umd.js\";\n\nclass RhPagination extends RHElement {\n  get html() {\n    return `\n<style>\n:host {\n  display: block; }\n\n:host([hidden]) {\n  display: none; }\n\n:focus:not(:focus-visible) {\n  outline: none; }\n\nnav *, nav *::before, nav *::after {\n  box-sizing: border-box; }\n\nnav ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  align-items: baseline; }\n  nav ul li {\n    margin: 1px;\n    display: flex; }\n    nav ul li > a {\n      display: block;\n      padding: 0 calc(var(--rh-theme--font-size, 16px) * 0.75);\n      line-height: calc( var(--rh-theme--font-size, 16px) * 2.5);\n      min-height: calc( var(--rh-theme--font-size, 16px) * 2.5);\n      min-width: calc( var(--rh-theme--font-size, 16px) * 2.5);\n      border: var(--rh-theme--ui--border-width, 1px) var(--rh-theme--ui--border-style, solid) transparent;\n      background: var(--rh-theme--color--ui-subtle, #f3f3f3);\n      color: var(--rh-theme--color--ui-subtle--text, #333);\n      text-align: center;\n      text-decoration: none;\n      vertical-align: middle; }\n      nav ul li > a:hover, nav ul li > a:focus, nav ul li > a:active {\n        background: var(--rh-theme--color--ui-base, #0477a4);\n        color: var(--rh-theme--color--ui-base--text, #fff); }\n      nav ul li > a[aria-current] {\n        background: var(--rh-theme--color--ui-complement, #464646);\n        color: var(--rh-theme--color--ui-complement--text, #fff); }\n    nav ul li#next {\n      order: 10; }\n</style>\n<nav role=\"navigation\" aria-label=\"Pagination\">\n  <ul>\n    ${this.showJump ? `\n      ${!this.showPages ? `\n        <li><a href=\"#\" id=\"previous\">${this.previousText}</a></li>\n        <li><a href=\"#\" id=\"next\">${this.nextText}</a></li>\n      ` : ``}\n      <li>\n        <form>\n          <input\n            type=\"number\"\n            id=\"currentPageInput\"\n            value=\"${this.currentPage}\"\n            min=\"1\"\n            max=\"${this.totalPages}\"> of\n          <a href=\"#\" id=\"lastPage\" page=\"${this.totalPages}\">${this.totalPages}</a>\n        </form>\n      </li>\n    ` : ``}\n    ${this.showPages ? `\n      <li><a href=\"#\" id=\"previous\">${this.previousText}</a></li>\n      ${this.pages.map(page => `\n        <li>\n          <a\n            href=\"#\"\n            class=\"page\"\n            page=\"${page.text}\"\n            aria-label=\"${page.ariaLabel}\"\n            ${this.currentPage == page.text ? ` aria-current=\"true\"` : `` }>\n            ${page.text}\n          </a>\n        </li>\n      `).join(\"\\n\")}\n      <li><a href=\"#\" id=\"next\">${this.nextText}</a></li>\n    `: ``}\n  </ul>\n</nav>`;\n  }\n\n  static get tag() {\n    return \"rh-pagination\";\n  }\n\n  get templateUrl() {\n    return \"rh-pagination.html\";\n  }\n\n  get styleUrl() {\n    return \"rh-pagination.scss\";\n  }\n\n  get showPages() {\n    return this.hasAttribute(\"show-pages\");\n  }\n\n  get showJump() {\n    return this.hasAttribute(\"show-jump\");\n  }\n\n  get totalPages() {\n    return Number(this.getAttribute(\"total-pages\"));\n  }\n\n  get currentPage() {\n    return Number(this.getAttribute(\"current-page\"));\n  }\n\n  set currentPage(val) {\n    let page = Number(val);\n\n    if (page < 1) {\n      page = 1;\n    }\n\n    if (page > this.totalPages) {\n      page = this.totalPages;\n    }\n\n    this.setAttribute(\"current-page\", page);\n\n    this.dispatchEvent(\n      new CustomEvent(`${RhPagination.tag}:page-change`, {\n        detail: {\n          page: page\n        },\n        bubbles: true\n      })\n    );\n  }\n\n  static get observedAttributes() {\n    return [\"total-pages\", \"show-jump\", \"show-pages\", \"current-page\"];\n  }\n\n  constructor() {\n    super(RhPagination, {\n      delayRender: true\n    });\n\n    this.previousText = \"Previous\";\n    this.nextText = \"Next\";\n    this.pages = [];\n\n    this._clickHandler = this._clickHandler.bind(this);\n    this._submitHandler = this._submitHandler.bind(this);\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    const previousControl = this.querySelector('[control=\"previous\"]');\n    const nextControl = this.querySelector('[control=\"next\"]');\n\n    this.previousText = previousControl.textContent || \"Previous\";\n    this.nextText = nextControl.textContent || \"Next\";\n\n    this._setup();\n    this._rendered = true;\n  }\n\n  disconnectedCallback() {}\n\n  attributeChangedCallback(attr, oldValue, newValue) {\n    if (!this._rendered) {\n      return;\n    }\n\n    this._setup();\n  }\n\n  previousPage(event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.currentPage -= 1;\n  }\n\n  nextPage(event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.currentPage += 1;\n  }\n\n  _setup() {\n    this.maxPagesShown = this.showJump && this.showPages ? 7 : 9;\n\n    if (this.maxPagesShown > this.totalPages) {\n      this.maxPagesShown = this.totalPages;\n    }\n\n    if (this.showPages) {\n      const truncatePageNumbers = this.totalPages > this.maxPagesShown;\n      const loopPages = truncatePageNumbers\n        ? this.maxPagesShown\n        : this.totalPages;\n      const mean = Math.ceil(this.maxPagesShown / 2);\n      const minMaxDistance = mean - 1;\n      const ellipsizeStart = this.currentPage - minMaxDistance > 1;\n      const ellipsizeEnd = this.currentPage + minMaxDistance < this.totalPages;\n\n      this.pages = [];\n\n      this.pages[0] = {\n        ellipsize: false,\n        ariaLabel: this._getAriaLabel(1),\n        text: 1\n      };\n\n      for (var i = 1; i <= loopPages - 2; i++) {\n        if (\n          ((i === 1 && ellipsizeStart) ||\n            (i === this.maxPagesShown - 2 && ellipsizeEnd)) &&\n          truncatePageNumbers\n        ) {\n          this.pages[i] = {\n            ellipsize: true,\n            text: \"...\"\n          };\n        } else {\n          let pageNumber = this.currentPage - minMaxDistance + i;\n\n          if (!ellipsizeStart) {\n            pageNumber = i + 1;\n          }\n\n          if (!ellipsizeEnd) {\n            pageNumber = this.totalPages - (this.maxPagesShown - 1) + i;\n          }\n\n          this.pages[i] = {\n            ellipsize: false,\n            ariaLabel: this._getAriaLabel(pageNumber),\n            text: pageNumber\n          };\n        }\n      }\n\n      this.pages[loopPages - 1] = {\n        ellipsize: false,\n        ariaLabel: this._getAriaLabel(this.totalPages),\n        text: this.totalPages\n      };\n    }\n\n    this.render();\n\n    this.shadowRoot\n      .querySelector(\"#previous\")\n      .addEventListener(\"click\", this.previousPage);\n    this.shadowRoot\n      .querySelector(\"#next\")\n      .addEventListener(\"click\", this.nextPage);\n\n    if (this.showPages) {\n      const pages = [...this.shadowRoot.querySelectorAll(\"a.page\")];\n      pages.forEach(page => {\n        page.addEventListener(\"click\", this._clickHandler);\n      });\n    }\n\n    if (this.showJump) {\n      const form = this.shadowRoot.querySelector(\"form\");\n      form.addEventListener(\"submit\", this._submitHandler);\n\n      const lastPage = this.shadowRoot.querySelector(\"#lastPage\");\n      lastPage.addEventListener(\"click\", this._clickHandler);\n    }\n  }\n\n  _clickHandler(event) {\n    event.preventDefault();\n    this.currentPage = event.currentTarget.getAttribute(\"page\");\n  }\n\n  _submitHandler(event) {\n    event.preventDefault();\n\n    const currentPageInput = this.shadowRoot.querySelector(\"#currentPageInput\");\n    this.currentPage = currentPageInput.value;\n  }\n\n  _getAriaLabel(page) {\n    return page === this.currentPage\n      ? `Page ${page}, Current Page`\n      : `Page ${page}`;\n  }\n}\n\nRHElement.create(RhPagination);\n\nexport default RhPagination;\n"],"names":["RhPagination","previousText","nextText","pages","_clickHandler","_this","bind","_submitHandler","previousPage","nextPage","RHElement","this","showJump","showPages","currentPage","totalPages","map","page","text","ariaLabel","_this2","join","hasAttribute","Number","getAttribute","val","setAttribute","dispatchEvent","CustomEvent","tag","previousControl","querySelector","nextControl","textContent","_setup","_rendered","attr","oldValue","newValue","event","preventDefault","maxPagesShown","truncatePageNumbers","loopPages","minMaxDistance","Math","ceil","ellipsizeStart","ellipsizeEnd","_getAriaLabel","i","pageNumber","render","shadowRoot","addEventListener","querySelectorAll","forEach","_this3","currentTarget","currentPageInput","value","create"],"mappings":"ojBAwBMA,gWA6IIA,EAAc,cACL,cAGVC,aAAe,aACfC,SAAW,SACXC,MAAQ,KAERC,cAAgBC,EAAKD,cAAcE,UACnCC,eAAiBF,EAAKE,eAAeD,UACrCE,aAAeH,EAAKG,aAAaF,UACjCG,SAAWJ,EAAKI,SAASH,6UAxJPI,igDAgDrBC,KAAKC,qBACFD,KAAKE,wDAC0BF,KAAKV,6DACTU,KAAKT,kKAOpBS,KAAKG,wDAEPH,KAAKI,+DACoBJ,KAAKI,gBAAeJ,KAAKI,oEAI/DJ,KAAKE,mDAC2BF,KAAKV,iCACnCU,KAAKR,MAAMa,IAAI,qHAKHC,EAAKC,mCACCD,EAAKE,6BACjBC,EAAKN,aAAeG,EAAKC,kDACzBD,EAAKC,iDAGVG,KAAK,2CACoBV,KAAKT,6FAW5B,4DAIA,8DAIAS,KAAKW,aAAa,sDAIlBX,KAAKW,aAAa,uDAIlBC,OAAOZ,KAAKa,aAAa,2DAIzBD,OAAOZ,KAAKa,aAAa,+BAGlBC,OACVR,EAAOM,OAAOE,GAEdR,EAAO,MACF,GAGLA,EAAON,KAAKI,eACPJ,KAAKI,iBAGTW,aAAa,eAAgBT,QAE7BU,cACH,IAAIC,YAAe5B,EAAa6B,mBAAmB,QACzC,MACAZ,YAEC,yCA7CN,iEAmDA,CAAC,cAAe,YAAa,aAAc,kaAqB5Ca,EAAkBnB,KAAKoB,cAAc,wBACrCC,EAAcrB,KAAKoB,cAAc,yBAElC9B,aAAe6B,EAAgBG,aAAe,gBAC9C/B,SAAW8B,EAAYC,aAAe,YAEtCC,cACAC,WAAY,mGAKMC,EAAMC,EAAUC,GAClC3B,KAAKwB,gBAILD,8CAGMK,GACPA,KACIC,sBAGH1B,aAAe,mCAGbyB,GACHA,KACIC,sBAGH1B,aAAe,sDAIf2B,cAAgB9B,KAAKC,UAAYD,KAAKE,UAAY,EAAI,EAEvDF,KAAK8B,cAAgB9B,KAAKI,kBACvB0B,cAAgB9B,KAAKI,YAGxBJ,KAAKE,UAAW,KACZ6B,EAAsB/B,KAAKI,WAAaJ,KAAK8B,cAC7CE,EAAYD,EACd/B,KAAK8B,cACL9B,KAAKI,WAEH6B,EADOC,KAAKC,KAAKnC,KAAK8B,cAAgB,GACd,EACxBM,EAAqD,EAApCpC,KAAKG,YAAc8B,EACpCI,EAAerC,KAAKG,YAAc8B,EAAiBjC,KAAKI,gBAEzDZ,MAAQ,QAERA,MAAM,GAAK,YACH,YACAQ,KAAKsC,cAAc,QACxB,OAGH,IAAIC,EAAI,EAAGA,GAAKP,EAAY,EAAGO,QAExB,IAANA,GAAWH,GACVG,IAAMvC,KAAK8B,cAAgB,GAAKO,IACnCN,OAEKvC,MAAM+C,GAAK,YACH,OACL,WAEH,KACDC,EAAaxC,KAAKG,YAAc8B,EAAiBM,EAEhDH,MACUG,EAAI,GAGdF,MACUrC,KAAKI,YAAcJ,KAAK8B,cAAgB,GAAKS,QAGvD/C,MAAM+C,GAAK,YACH,YACAvC,KAAKsC,cAAcE,QACxBA,QAKPhD,MAAMwC,EAAY,GAAK,YACf,YACAhC,KAAKsC,cAActC,KAAKI,iBAC7BJ,KAAKI,kBAIVqC,cAEAC,WACFtB,cAAc,aACduB,iBAAiB,QAAS3C,KAAKH,mBAC7B6C,WACFtB,cAAc,SACduB,iBAAiB,QAAS3C,KAAKF,UAE9BE,KAAKE,6IACWF,KAAK0C,WAAWE,iBAAiB,YAC7CC,QAAQ,cACPF,iBAAiB,QAASG,EAAKrD,iBAIpCO,KAAKC,WACMD,KAAK0C,WAAWtB,cAAc,QACtCuB,iBAAiB,SAAU3C,KAAKJ,gBAEpBI,KAAK0C,WAAWtB,cAAc,aACtCuB,iBAAiB,QAAS3C,KAAKP,sDAI9BmC,KACNC,sBACD1B,YAAcyB,EAAMmB,cAAclC,aAAa,+CAGvCe,KACPC,qBAEAmB,EAAmBhD,KAAK0C,WAAWtB,cAAc,0BAClDjB,YAAc6C,EAAiBC,4CAGxB3C,UACLA,IAASN,KAAKG,oBACTG,2BACAA,kBAIhBP,EAAUmD,OAAO7D"}