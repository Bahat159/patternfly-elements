@import "../../pfe-sass/pfe-sass";

$LOCAL: navigation-item;

/// ===========================================================================
/// Component Specific SASS Vars
/// ===========================================================================
$pfe-nav-size: 4em;

/// ===========================================================================
/// DEFAULT nav-item
/// ===========================================================================
:host {
	// Fill the navigation container
	height: 100%;
	// Update the navigation padding in this context
	--pfe-navigation--Padding--vertical: #{pfe-var(container-spacer)};

	--pfe-navigation-item__tray--Width__aside--sm: 240px;
	--pfe-navigation-item__tray--Width__aside--lg: 300px;
}

/// ===========================================================================
/// MOBILE
/// ===========================================================================
:host {
	@media (max-width: #{pfe-breakpoint(md-max)} ) {
	    display: inline-block;
	}
}

/// ===========================================================================
/// DESKTOP
/// ===========================================================================
:host {
  font-family: #{pfe-var(font-family)};

  @media (min-width: #{pfe-breakpoint(md)}) {
	  --pfe-nav-item--main:        #{pfe-color(text)};              // text
	  --pfe-nav-item--main--hover: #{pfe-color(text--on-dark)};     // text hover

	  --pfe-nav-item--aux:         transparent;                     // bg
	  --pfe-nav-item--aux--hover:  #{pfe-color(surface--darkest)};  // bg hover

	  font-weight: bold;
	  font-weight: 300;
	  min-height: $pfe-nav-size;
	  
	  //border: green solid 1px;
	  display: flex;
	  flex-direction: column;
	  align-items: center;
	  justify-content: center;
  }
}

::slotted(a) {
  @media (max-width: #{pfe-breakpoint(md, $max: true)}) {
		@include pfe-expand-button;
		@include pfe-expand-button-expanded;
		text-decoration: none;
  }
}
::slotted(a[aria-expanded="false"]::after) {
	@include pfe-expand-button-expanded-false($position: after);
}
::slotted(a[aria-expanded="true"]::after) {
	@include pfe-expand-button-expanded-true($position: after);
}


.pfe-navigation-item {
	&__wrapper {
		display: block;
		background-color: #{pfe-color(surface--lighter)};
		position: absolute;
		top: 80px; // @TODO Need to do this with JS
		left: 0;
		width: 100%;
		z-index: 1;
		transition: all #{pfe-var(animation-timing)};

		&[hidden] {
			display: none;
		}
	}
	&__container {
		margin:    	0 auto;
		padding: #{pfe-var(container-spacer)} #{pfe-local(Padding--horizontal)};
		width: 			var(--pfe-navigation--Width);
	}
	&__button {
		text-decoration: none;
		@media (max-width: #{pfe-breakpoint(md, $max: true)}) {
			@include pfe-expand-button;
			@include pfe-expand-button-expanded;

			&[aria-expanded="false"]::after {
				@include pfe-expand-button-expanded-false($position: after);
			}
			&[aria-expanded="true"]::after {
				@include pfe-expand-button-expanded-true($position: after);
			}
		}
		@media (min-width: #{pfe-breakpoint(md)}) {
			flex: 1;
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			// Fill the navigation container
			height: 100%;
			display: flex;
			align-items: center;
			justify-content: center;
			cursor: pointer;
			text-decoration: none;
			border-top:       transparent solid 2px;
			color:            var(--pfe-nav-item--main); //text
			background:       var(--pfe-nav-item--aux);  //bg
			padding: 0 calc(#{pfe-var(container-padding)} * 1);
			line-height: $pfe-nav-size;
		}


	  &:hover {
	  	border-top-color: #{pfe-color(surface--accent)};
	  	background:       var(--pfe-nav-item--aux--hover);
	  	color:            var(--pfe-nav-item--main--hover);
	  }
	  &:active {
	  	border-top-color: #{pfe-color(surface--accent)};
	  	background:       var(--pfe-nav-item--aux--hover);
	  	color:            var(--pfe-nav-item--main--hover);
	  }
	  &:focus {
	  	border-top-color: #{pfe-color(surface--accent)};
	  	background:       var(--pfe-nav-item--aux--hover);
	  	color:            var(--pfe-nav-item--main--hover);
	  	&:not(:focus-visible) {
	  		outline: none; // removes outline for mouse users, preserves it for keyboard users
	  	}
	  }
	}

	&__icon {
		@media (min-width: #{pfe-breakpoint(md)}) {
			margin: 0 0 2px 0;
			display: block;
			height: 20px;
			width: 20px;
			border: white solid 1px;
			path {
				-webkit-text-fill-color: white;
				fill: white;
			}
		}
	}
	&__text {	
		transition: all #{pfe-var(animation-timing)};

		@media (max-width: #{pfe-breakpoint(md, $max: true)}) {
		  @include pfe-expand-button;
		  @include pfe-expand-button-expanded;
		  text-decoration: none;
		}
		@media (min-width: #{pfe-breakpoint(md)}) {
			margin: 0;
			color:  inherit; 
			line-height: 1.2;
		}
	}
}


/// ===========================================================================
/// ON DARK
/// ===========================================================================
:host([on="dark"]) {
	@media (min-width: #{pfe-breakpoint(md)}) {
		--pfe-nav-item--main:        #{pfe-color(text--on-dark)};      // text
		--pfe-nav-item--main--hover: #{pfe-color(text)};               // text hover

		--pfe-nav-item--aux:         transparent;                      // bg
		--pfe-nav-item--aux--hover:  #{pfe-color(surface--lightest)};  // bg hover
	}
}

:host([hidden]) {
	display: none;
}
